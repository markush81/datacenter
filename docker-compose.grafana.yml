---
version: '3.8'

services:
  prometheus:
    image: prom/prometheus:${GRAFANA__PROMETHEUS_VERSION}
    command: --enable-feature=remote-write-receiver
    restart: unless-stopped
    mem_limit: 512MB
    ports:
      - 9090:9090
    container_name: prometheus
    hostname: prometheus
    environment: []
    networks:
      - oam
    volumes:
      - promdata:/prometheus
      - ./grafana/prometheus/prometheus.yml:/prometheus/prometheus.yml
    healthcheck:
      interval: 5s
      retries: 20
      test: wget -O- -q http://localhost:9090/api/v1/status/runtimeinfo | grep -q '"status":"success"'

  grafana:
    image: grafana/grafana-oss:${GRAFANA__GRAFANA_VERSION}
    restart: unless-stopped
    mem_limit: 512MB
    depends_on:
      - otelcollector
    ports:
      - 3000:3000
    container_name: grafana
    hostname: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA__INITIAL_PASSWORD}
      GF_FEATURE_TOGGLES_ENABLE: tempoSearch tempoBackendSearch
    networks:
      - oam
    volumes:
      - grafanadata:/var/lib/grafana
      - ./grafana/grafana/provisioning/:/etc/grafana/provisioning/
    healthcheck:
      interval: 5s
      retries: 20
      test: wget -O- -q --server-response http://admin:$$GRAFANA__PROMETHEUS_VERSION@localhost:3000/api/health 2>&1 | awk '/HTTP\//{ print $2 }' | grep 200

  loki:
    image: grafana/loki:${GRAFANA__LOKI_VERSION}
    command: -config.file=/etc/loki/config.yml
    restart: unless-stopped
    mem_limit: 512MB
    container_name: loki
    hostname: loki
    networks:
      - oam
    volumes:
      - lokidata:/loki
      - ./grafana/loki:/etc/loki
    healthcheck:
      interval: 5s
      retries: 20
      test: wget -O- -q http://localhost:3100/ready | grep -q 'ready'

  tempo:
    image: grafana/tempo:${GRAFANA__TEMPO_VERSION}
    command: -config.file=/etc/tempo/config.yml
    restart: unless-stopped
    mem_limit: 512MB
    ports:
      - 9411:9411
    container_name: tempo
    hostname: tempo
    networks:
      - oam
    volumes:
      - tempodata:/tmp/tempo
      - ./grafana/tempo:/etc/tempo
    healthcheck:
      interval: 5s
      retries: 20
      test: wget -O- -q http://localhost:3100/ready | grep -q 'ready'

  otelcollector:
    image: otel/opentelemetry-collector-contrib:${OTEL__COLLECTOR_VERSION}
    restart: unless-stopped
    mem_limit: 128MB
    depends_on:
      prometheus:
        condition: service_healthy
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
    ports:
      - 4317:4317
    container_name: grafana-otelcollector
    hostname: grafana-otelcollector
    networks:
      - oam
    volumes:
      - ./grafana/otelcol:/etc/otelcol-contrib

networks:
  oam:

volumes:
  grafanadata:
    driver: local
  promdata:
    driver: local
  lokidata:
    driver: local
  tempodata:
    driver: local