#!/bin/bash
set -e
set -u
set -o pipefail
IFS=$'\n\t'

# shellcheck source=/dev/null
. "$(dirname "$0")/common.sh"

usage() {
  echo "$(basename "$0") [-h] [-w] [-v]"
  echo -e "  -w\t\tlist of comma separated apps"
  echo -e "  -v\t\tremove volumes"
  echo -e "  -h\t\tprints this help"
}

k8s() {
  kind delete cluster --name datacenter-k8s
}

declare -a COMPOSE_FILES
declare -a OPTIONS
declare -i KUBERNETES_ENABLED=0

if [[ $# -gt 0 ]]; then
  while getopts ":w:hv" opt 2>/dev/null; do
    case ${opt} in
    w)
      APPS=()
      while IFS='' read -r line; do APPS+=("$line"); done < <(echo "${OPTARG}" | tr "," "\n")
      for APP in "${APPS[@]}"; do
        if [[ "$APP" == "k8s" ]]; then
          KUBERNETES_ENABLED=1
        else
          FILE="docker-compose.${APP}.yml"
          if [[ -f "$FILE" ]]; then
            COMPOSE_FILES+=(-f "${FILE}")
            info "... adding $FILE"
          else
            warning "docker-compose file for $APP doesn't exist. Ignoring..."
          fi
        fi
      done
      ;;
    v)
      OPTIONS+=(-v)
      break
      ;;
    h)
      usage
      exit 0
      ;;
    *)
      failure "Invalid argument"
      usage
      exit 1
      ;;
    esac
  done
fi

if [ "${COMPOSE_FILES[*]:-}" == '' ]; then
  FILES=()
  while IFS='' read -r line; do FILES+=("$line"); done < <(ls docker-compose*yml)
  for file in "${FILES[@]}"; do
    COMPOSE_FILES+=(-f "${file}")
  done
  KUBERNETES_ENABLED=1
  info "Stopping all applications..."
fi

if [[ $KUBERNETES_ENABLED -eq 1 ]]; then
  ensure_commands kind
  k8s
fi

ensure_commands docker-compose

docker-compose "${COMPOSE_FILES[@]}" down "${OPTIONS[@]:-}"
